.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH FWSNORT 8 "March, 2003" Linux
.SH NAME
.B fwsnort
\- Firewall Snort
.SH SYNOPSIS
.B fwsnort [-t <snort rule type>] [-l <logfile>] [-v] [-V] [-h] [-t] [-c <config file>] [--snort-sid <sid>] [--no-ipt-sync] [--ipt-apply] [--ipt-drop] [--no-ipt-log] [--ipt-script <script>] [--dump-conf] [--debug] [--strict]
.SH DESCRIPTION
.B fwsnort
translates snort rules into equivalent iptables rules and generates a
bourne shell script that implements the resulting iptables ruleset.
This ruleset allows network traffic that exhibits snort signatures to
be logged and/or dropped by iptables directly without putting any interface
into promiscuous mode or queuing packets from kernel to user space.  In
addition, fwsnort (optionally) uses the IPTables::Parse module to parse
the iptables ruleset on the machine to determine which snort rules are
applicable to the specific iptables policy.  After all, if iptables is
blocking all inbound http traffic from external addresses, it is probably
not of much use to try detecting inbound attacks against against tcp/80.
By default fwsnort generates iptables rules that log snort sid's with
--log-prefix to klogd where the messages can be analyzed with a log
watcher such as logwatch or psad.
.B fwsnort
relies on the iptables string match module to match snort content fields
in the application portion of ip traffic.  Since snort rules can contain
hex data in content fields, fwsnort implements a patch against
iptables-1.2.7a which adds a "--hex-string" option which will accept
content fields such as "|0d0a5b52504c5d3030320d0a|".
.B fwsnort
is able to translate approximately 80% of all snort signatures
into equivalent iptables rules.  For more information about the
translation strategy as well as advantages/disadvantages of the method
used by fwsnort to obtain intrusion detection data, see the README
included with the fwsnort sources or browse to:
http://www.cipherdyne.com/fwsnort.

.SH OPTIONS
.PP
.PD 0
.TP

.BR \-c ", " \-\^\-config\ \<configuration\ file>
By default fwsnort makes use of the configuration file
.B /etc/fwsnort/fwsnort.conf
for almost all configuration parameters.  fwsnort can be made to
override this path by specifying a different file on the command
line with the --config option.
.TP

.BR \-t ", " \-\^\-type\ \ <rules\ type>
Restrict to processing snort rules of <rules type>.  Example rule
types would include "ddos", "backdoor", and "web-attacks".
.TP

.BR \-\^\-snort-sid\ \<sid>
Generate an iptables ruleset for a single snort rule specified by
<sid>.
.TP

.BR \-\^\-ipt-script\ \<script\ file>
Specify the path to the iptables script generated by fwsnort.  The
default location is /etc/fwsnort/fwsnort.sh.
.TP

.BR \-\^\-ipt-apply
Execute the iptables script generated by fwsnort.
.TP

.BR \-\^\-ipt-drop
For each logging rule generated by fwsnort, add a corresponding DROP
rule.
.TP

.BR \-\^\-no-ipt-log
By default fwsnort generates an iptables script that implements a logging
rule for each successfully translated snort rule.  This can be disabled
with the --no-ipt-log option, but --ipt-drop must also be specified.
.TP

.BR \-\^\-no-ipt-sync
Do not consult the iptables policy currently running on the machine
for applicable snort rules.  Unless limited with the --type or --snort-sid
options this can result in a fwsnort.sh script that contains several
thousand iptables rules.
.TP

.BR \-\^\-dump-conf
Print the fwsnort configuration on STDOUT and exit.
.TP

.BR \-\^\-debug
Run in debug mode.  This will cause all parse errors which are normally
written to the fwsnort logfile
.B /var/log/fwsnort.log
to be written to STDOUT instead.
.TP

.BR \-\^\-strict
Run fwsnort in "strict" mode.  This will prevent fwsnort from translating
snort rules that contain the keywords "offset", "uricontent", and "depth".
.TP

.BR \-l ", " \-\^\-logfile\ <logfile>
By default fwsnort logs all parse errors to the logfile
.B /var/log/fwsnort.log.
This path can be manually changed with the --logfile option.
.TP

.BR \-v ", " \-\^\-verbose
Run fwsnort in verbose mode.  This will cause fwsnort to add the original
snort rule as a comment to the fwsnort.sh script for each successfully
translated rule.
.TP

.BR \-V ", " \-\^\-Version
Print the fwsnort version and exit.
.TP

.BR \-h ", " \-\^\-help
Print usage information on STDOUT and exit.

.SH FILES
.B /etc/fwnort/fwsnort.conf
.RS
The fwsnort configuration file.  The path to this file can be
changed on the command line with --config.
.RE

.B /etc/fwnort/fwsnort.sh
.RS
The iptables script generated by fwsnort.  The path can be manually
specified on the command line with the --ipt-script option.


.SH FWSNORT CONFIGURATION VARIABLES
This section describes what each of the more important fwsnort configuration
variables do and how they can be tuned to meet your needs.  These variables
are located in the fwsnort configuration file
.B /etc/fwsnort/fwsnort.conf

.PP
.PD
.TP

.BR EXTERNAL_INTF
.B fwsnort
can handle from one to three interfaces on the iptables firewall; one
external interface, one internal interface, and one dmz interface.
EXTERNAL_INTF specifies the external interface and must match the name
of one interface on the Linux system as reported under
.B ifconfig,
e.g. "eth0".  Both the external and interfaces must be defined, but if
fwsnort is deployed on a single-interface host, then define the external
and internal interfaces to be the same.
.TP

.BR INTERNAL_INTF
Defines the internal interface, e.g. "eth1".  (May be the same as the
external interface if the host has only one interface).
.TP

.BR DMZ_INTF
Defines an (optional) dmz interface, e.g. "eth2".

.SH EXAMPLES
The following examples illustrate the command line arguments that could
be supplied to fwsnort in a few situations:

Script generation in logging mode, parse errors written to the fwsnort
logfile, and iptables policy checking are enabled by default without
having to specify any command line arguments:

.B # fwsnort

Generate iptables rules for ddos snort rules only:

.B # fwsnort --type ddos

Generate iptables rules for all snort rules, and write original
snort rule to the iptables script as a comment:

.B # fwsnort --no-ipt-sync --verbose

.SH DEPENDENCIES
.B fwsnort
requires that the iptables string match module be compiled into the
kernel (or as a loadable kernel module) in order to be able to match
snort signatures that make use of the "content" keyword.  Note that
the --no-opt-test option can be specified to have fwsnort generate an
iptables script even if the string match module is not compiled in.

.B fwsnort
also requires the IPTables::Parse module in order to parse
iptables policies.

.SH DIAGNOSTICS
The --debug option can be used to display on STDOUT any errors that
are generated as fwsnort parses each snort rule.  Normally these
errors are written to the fwsnort logfile /var/log/fwsnort.log

.SH "SEE ALSO"
.BR iptables (8),
.BR snort (8),
.BR nmap (1)

.SH AUTHOR
Michael Rash <mbr@cipherdyne.com>

.SH CREDITS
.B fwsnort
is based on the original
.B snort2iptables
script written by William Stearns.

.SH BUGS
Send bug reports to mbr@cipherdyne.com. Suggestions and/or comments are
always welcome as well.

.SH DISTRIBUTION
.B fwsnort
is distributed under the GNU General Public License (GPL), and the latest
version may be downloaded from
.B http://www.cipherdyne.com
